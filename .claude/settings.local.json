{
  "permissions": {
    "allow": [
      "Bash(export BROWSER=echo)",
      "Bash(diagrid whoami:*)",
      "Bash(BROWSER=/tmp/browser-noop diagrid whoami)",
      "Bash(export PATH=\"$HOME/bin:$PATH\")",
      "Bash(ls:*)",
      "Bash(chmod:*)",
      "Bash(mkdir:*)",
      "Bash(python test:*)",
      "Bash(pip install:*)",
      "Bash(cp:*)",
      "Bash(pkill:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(pip uninstall:*)",
      "Bash(chainlit run:*)",
      "Bash(PYTHONPATH=/workspaces/compliance-sentinel/services/adaptive-interface python -c \"\nimport sys\nimport importlib.metadata as md\n\n# Monkey patch the problematic function\noriginal_name = md.PackageMetadata.__getitem__\n\ndef safe_name(self, key):\n    try:\n        return original_name(self, key)\n    except (KeyError, TypeError):\n        if key == ''Name'':\n            return ''unknown-package''\n        raise\n\nmd.PackageMetadata.__getitem__ = safe_name\n\n# Now try to import chainlit\nimport chainlit as cl\nprint(''âœ… Chainlit imported successfully!'')\n\")",
      "mcp__rag-memory__searchNodes",
      "mcp__rag-memory__getKnowledgeGraphStats",
      "mcp__rag-memory__listDocuments",
      "mcp__rag-memory__hybridSearch",
      "mcp__rag-memory__getDetailedContext",
      "mcp__rag-memory__openNodes",
      "mcp__rag-memory__createEntities",
      "mcp__rag-memory__createRelations",
      "Bash(python:*)",
      "Bash(redis-server:*)",
      "Bash(rm:*)",
      "Bash(mv:*)",
      "Bash(curl:*)",
      "Bash(true)",
      "Bash(timeout:*)",
      "Bash(__NEW_LINE__ echo \"1. Backend Service File:\")",
      "Bash(__NEW_LINE__ echo \"2. Frontend Service File:\")",
      "Bash(__NEW_LINE__ echo \"3. Backend Service Quick Test:\")",
      "Bash(__NEW_LINE__ echo \"\")",
      "Bash(pre-commit:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(./scripts/scan-secrets.sh:*)",
      "Bash(git reset:*)",
      "mcp__rag-memory__storeDocument"
    ]
  },
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "rag-memory",
    "duckduckgo",
    "sequentialthinking",
    "context7",
    "deepwiki"
  ]
}